name: Continuous Delivery

on:
    push:
        tags: ['v*']

jobs:
    create_release_notes:
        runs-on: ubuntu-latest
        steps:
            - name: Create Release Notes
              id: create_release_notes
              uses: release-drafter/release-drafter@v5
              with:
                  publish: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            release_name: ${{ steps.create_release_notes.name }}
            release_tag_name: ${{ steps.create_release_notes.tag_name }}

    build:
        runs-on: windows-latest
        needs:
            - create_release_notes

        steps:
            - name: Clone
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: "9.0"

            - name: Configure Visual Studio
              uses: microsoft/setup-msbuild@v2

            - name: Update Versions
              id: update_version
              run: |
                $ref = "${{ github.ref }}"
                if ($ref.StartsWith("refs/tags/")) {
                  $ref = $ref.Replace("refs/tags/", "")
                }

                $version = [regex]::Replace($ref, '^v(\d+(?:\.\d+){1,2})(-.+)?$', '$1$2')
                $json = Get-Content .\version.json | ConvertFrom-Json
                $json.version = $version
                $json | ConvertTo-Json | Set-Content .\version.json

                $version = [regex]::Replace($ref, '^v(\d+(?:\.\d+){1,2})(-.+)?$', '$1')
                if ($version -ne '') {
                  [xml]$manifest = Get-Content '.\src\MSIExtract.AppxPackage\Package.appxmanifest'
                  $manifest.Package.Identity.Version = "$($version).0"
                  $manifest.Save('.\src\MSIExtract.AppxPackage\Package.appxmanifest')
                }

                echo "version=$version" >> $env:GITHUB_OUTPUT

            - name: Nerdbank.GitVersioning
              uses: dotnet/nbgv@master
              id: nbgv
              with:
                  setAllVars: true

            - name: Build
              working-directory: ./src/MSIExtract.AppxPackage
              run: |
                & MSBuild.exe /nologo /restore /bl /m /p:Configuration=Release /p:Platform=x64 `
                  /p:BuildAppxUploadPackageForUap=true `
                  /p:AppxBundle=Always `
                  /p:AppxPackageSigningEnabled=true `
                  /p:PackageCertificateThumbprint=67232A07FF8347D3839848D007238C9A61A599FE `
                  /p:PackageCertificateKeyFile=.\cert.pfx `
                  /p:PackageCertificatePassword=1234 `
                  /p:PublicRelease=true `
                  /t:Publish

            - name: Prepare Assets for Upload
              working-directory: ./bin/AppxPackages
              run: |
                $uploads = (dir *.msixupload)
                if ($uploads.Length -ne 0) {
                  mv $uploads[0].FullName MSIViewer_${{ steps.update_version.outputs.version }}.msixupload -Verbose
                } else {
                  Write-Error "Could not find any msixupload files"
                }

                $bundles = (dir *_Test | dir -Include *.msixbundle)
                if ($bundles.Length -ne 0) {
                  mv $bundles[0].FullName MSIViewer_${{ steps.update_version.outputs.version }}_Sideload.msixbundle -Verbose
                } else {
                  Write-Error "Could not find any msixbundle files"
                }

            - name: Generate SBOM
              uses: anchore/sbom-action@v0
              with:
                path: bin/MSIExtract/ARM64/Release
                output-file: bin/MSIExtract.spdx.json

            - name: Upload Release Assets
              # This exact commit of this fork is used because it fixes a bug that would
              # cause the workflow to fail if a draft of the release already exists (which
              # it always will because we use release-drafter).
              uses: stephenway/action-gh-release@ef35f3531735d05ee289420f24b6aa256c112082
              with:
                draft: true
                name: ${{ needs.create_release_notes.outputs.release_name }}
                tag_name: ${{ needs.create_release_notes.outputs.release_tag_name }}
                files: |
                  bin/MSIExtract.spdx.json
                  bin/AppxPackages/MSIViewer_${{ steps.update_version.outputs.version }}.msixupload
                  bin/AppxPackages/MSIViewer_${{ steps.update_version.outputs.version }}_Sideload.msixbundle
